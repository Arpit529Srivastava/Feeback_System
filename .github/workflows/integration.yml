name: Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: "Install dependencies"
      run: npm i
      working-directory: ./frontend

    - name: "Building the frontend"
      run: npm run build
      working-directory: ./frontend
 
  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: "Install dependencies"
      run: npm i
      working-directory: ./frontend
      
    - name: "Testing the frontend"
      run: npm run test
      working-directory: ./frontend

  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        cache-dependency-path: backend/go.sum

    - name: Install dependencies
      run: go mod download
      working-directory: ./backend

    - name: Build backend
      run: go build -v ./...
      working-directory: ./backend

  test-backend:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        cache-dependency-path: backend/go.sum

    - name: Install dependencies
      run: go mod download
      working-directory: ./backend

    - name: Run backend tests
      run: go test -v ./...
      working-directory: ./backend
      env:
        MONGODB_URI: mongodb://localhost:27017/feedback_test
        PORT: 8080
        GIN_MODE: test